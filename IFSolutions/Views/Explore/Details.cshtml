@model IFSolutions.Models.Petition
@using Microsoft.AspNet.Identity

@{
    if (Model.Solved)
    {
        ViewBag.DivClass = "panel panel-success";
        ViewBag.Glyphicon = "glyphicon glyphicon-ok-circle";
    }
    else
    {
        ViewBag.DivClass = "panel panel-danger";
        ViewBag.Glyphicon = "glyphicon glyphicon-remove-circle";
    }

    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="fb-root"></div>
<script>
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script type="text/javascript">
    function onSuccess() {
        document.getElementById("comment-textbox").textContent = "";
    }
</script>

<h2>Detalhes da petição</h2>

<div>
    <p>
        @if (Model.Solved)
        {
            @Html.ActionLink("Voltar para Petições", "Index", new { solved = true })
        }
        else
        {
            @Html.ActionLink("Voltar para Petições", "Index")
        }
        &emsp;
        @if (!ViewBag.UserComplained)
        {
           @Html.ActionLink("Marcar como impróprio", "ComplainPetition", new { petitionID = Model.PetitionID }, new { @class = "text-warning" })
        }
    </p>
    <p class="text-success">@ViewBag.StatusMessage</p>
    <hr />
    <div class="@ViewBag.DivClass" style="padding: 0;">
        <div class="panel-heading">
            <h3 class="panel-title">
                <span class="@ViewBag.Glyphicon" aria-hidden="true"></span>
                @Model.Title
            </h3>
        </div>
        <div class="panel-body">
            <p>
                <strong>@Html.DisplayNameFor(p => p.Category.Description):</strong> @Html.DisplayFor(p => p.Category.Description)
            </p>
            <p>
                <strong>@Html.DisplayNameFor(p => p.Campus.Description):</strong> @Html.DisplayFor(p => p.Campus.Description)
            </p>
            <hr />
            <p>
                @Html.DisplayFor(p => p.Description)
            </p>
            <hr />
            <p>
                <div class="fb-share-button" data-href="@Request.Url.AbsoluteUri" data-layout="button_count"></div>&emsp;
                <a href="https://twitter.com/share" class="twitter-share-button" data-url="@Request.Url.AbsoluteUri" data-hashtags="ifsolutions">Tweet</a>
                <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'twitter-wjs');</script>
            </p>
            <hr />
            <p>
                <strong>Criada por:</strong> @Html.DisplayFor(p => p.User.FirstName) @Html.DisplayFor(p => p.User.LastName)
            </p>
            <p>
                <strong>Número de assinaturas:</strong> @Html.DisplayFor(p => p.Signatures.Count)
            </p>
            <p>
                @if (User.Identity.IsAuthenticated && !Model.Solved)
                {
                    if (!ViewBag.UserSigned)
                    {
                        @Html.ActionLink("Assinar!", "SignPetition", new { petitionID = Model.PetitionID }, new { @class = "btn btn-success" })
                    }
                    else
                    {
                        @Html.ActionLink("Remover Assinatura", "UnsignPetition", new { petitionID = Model.PetitionID },
                                    new { @class = "btn btn-danger" })
                    }
                }

                @if (Model.Solved)
                {
                    <strong>@Html.DisplayNameFor(m => m.DateSolved):</strong> @Html.DisplayFor(m => m.DateSolved)
                }
                else
                {
                    if (User.IsInRole("Administrator") || User.IsInRole("Employee") ||
                        Model.UserId.Equals(User.Identity.GetUserId(), StringComparison.CurrentCultureIgnoreCase))
                    {
                        <div class="dropdown">
                            <button class="btn btn-default dropdown-toggle" type="button" id="manageDropDown" data-toggle="dropdown" aria-expanded="true">
                                <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
                                Gerenciar
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" role="menu">
                                @if (!Model.Solved)
                                {
                                    <li role="presentation">@Html.ActionLink("Marcar como resolvido", "MarkAsSolved", new { petitionID = Model.PetitionID })</li>
                                }
                            </ul>
                        </div>
                    }
                }
            </p>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><span class="glyphicon glyphicon-comment" aria-hidden="true"></span> Comments</h3>
        </div>
        <div class="panel-body" id="comments">
            @Html.Action("_ListComments", "Explore", new { petitionID = Model.PetitionID })
        </div>
    </div>
</div>